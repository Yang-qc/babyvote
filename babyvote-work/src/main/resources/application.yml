server:
  port: ${PORT:21001}
spring:
  application:
    name: yanxue-activity
  profiles:
    active: dev   # 环境设置：dev、test、prod
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/baby_p2p?useSSL=false&serverTimezone=GMT%2B8&characterEncoding=utf8
#    url: jdbc:mysql://106.53.18.237:3307/yanxue?useSSL=false&serverTimezone=GMT%2B8&characterEncoding=utf8
    #&characterEncoding=utf8
    username: root
    password: sasa
    # Hikari是Spring Boot 2.0之后默认整合的数据库连接池，比druid更快的数据库连接池
    #type: com.zaxxer.hikari.HikariDataSource
    # 连接池名称，默认HikariPool-1
    hikari:
      pool-name: GuliHikariPool   # 连接池名称，默认HikariPool-1
      #最大连接数，小于等于0会被重置为默认值10；大于零小于1会被重置为minimum-idle的值
      maximum-pool-size: 12
      # 连接超时时间:毫秒，小于250毫秒，否则被重置为默认值30秒
      connection-timeout: 60000
      # 最小空闲连接，默认值10，小于0或大于maximum-pool-size，都会重置为maximum-pool-size
      minimum-idle: 10
      # 空闲连接超时时间，默认值600000（10分钟），大于等于max-lifetime且max-lifetime>0，会被重置为0；不等于0且小于10秒，会被重置为10秒。
      # 只有空闲连接数大于最大连接数且空闲时间超过该值，才会被释放
      idle-timeout: 500000
      # 连接最大存活时间.不等于0且小于30秒，会被重置为默认值30分钟.设置应该比mysql设置的超时时间短
      max-lifetime: 540000
      #连接测试查询
      connection-test-query: SELECT 1
  #mybatis日志
  jackson:
    #参数意义：
    #JsonInclude.Include.ALWAYS       默认
    #JsonInclude.Include.NON_DEFAULT   属性为默认值不序列化
    #JsonInclude.Include.NON_EMPTY     属性为 空（””） 或者为 NULL 都不序列化
    #JsonInclude.Include.NON_NULL      属性为NULL  不序列化
    default-property-inclusion: ALWAYS
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath*:com/babyvote/work/**/xml/*Mapper.xml
#  type-aliases-package: com.babyvote.work.pojo
#  global-config:
#    db-config:
#      logic-delete-value: 0 # 逻辑未删除值(默认为 0)
#      logic-not-delete-value: 1 # 逻辑已删除值(默认为 1)
#eureka:
#  client:
#    registerWithEureka: true #服务注册开关
#    fetchRegistry: true #服务发现开关
#    serviceUrl: #Eureka客户端与Eureka服务端进行交互的地址，多个中间用逗号分隔
##      defaultZone: ${EUREKA_SERVER:http://localhost:50101/eureka/,http://localhost:50102/eureka/}
#      defaultZone: http://localhost:50101/eureka/
#  instance:
#    prefer-ip-address: true #将自己的ip地址注册到Eureka服务中
#    ip-address: ${IP_ADDRESS:127.0.0.1}
#    instance-id: ${spring.application.name}:${server.port} #指定实例id
